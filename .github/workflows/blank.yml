name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code
      - uses: actions/checkout@v3

      # Step 2: Install Vault CLI from HashiCorp's official repository
      - name: Install Vault CLI
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install -y vault

      # Step 3: Retrieve GitHub OIDC token (this is automatic for GitHub Actions)
      - name: Retrieve GitHub OIDC token
        id: oidc-token
        run: echo "OIDC_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      # Step 4: Log in to Vault using a custom JWT Auth Path
      - name: Vault Login using custom JWT Auth Path
        env:
          VAULT_ADDR: https://127.0.0.1:8200
          VAULT_NAMESPACE: root
          GITHUB_OIDC_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Use the Vault API to log in with the custom auth path
          LOGIN_RESPONSE=$(curl --request POST --data "{\"role\": \"mygithubproject-productionrole2\", \"jwt\": \"$GITHUB_OIDC_TOKEN\"}" \
            ${VAULT_ADDR}/v1/auth/mycustom_github_jwt_engine/login)
          VAULT_TOKEN=$(echo $LOGIN_RESPONSE | jq -r .auth.client_token)
          echo "VAULT_TOKEN=$VAULT_TOKEN" >> $GITHUB_ENV

      # Step 5: Retrieve secrets from Vault
      - name: Retrieve secret from Vault
        env:
          VAULT_TOKEN: ${{ env.VAULT_TOKEN }}
        run: |
          VAULT_SECRET=$(curl --header "X-Vault-Token: $VAULT_TOKEN" \
            ${VAULT_ADDR}/v1/kv/data/secrets/mygithubproject/secret1 | jq -r .data.data.secretvalue)
          echo "MY_SECRET=$VAULT_SECRET" >> $GITHUB_ENV

      # Step 6: Use secret from Vault
      - name: Use secret from Vault
        run: |
          echo "Retrieved secret: ${{ env.MY_SECRET }}"
